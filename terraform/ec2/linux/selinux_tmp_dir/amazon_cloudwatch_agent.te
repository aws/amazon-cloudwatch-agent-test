policy_module(amazon_cloudwatch_agent, 1.0.2)

require {
    type unconfined_t;
    type bin_t;
    type var_run_t;
    type user_devpts_t;
    type init_t;
    type proc_t;
    type proc_net_t;
    type sysfs_t;
    type cgroup_t;
    type udev_var_run_t;
    type udev_t;
    type var_log_t;
    type fs_t;
    type passwd_file_t;
    type fixed_disk_device_t;
    type kernel_t;
    type shadow_t;
    type crond_t;
    type unlabeled_t;
    type syslogd_t;
    type rngd_t;
    type systemd_userdbd_t;
    type statsd_port_t;
    type systemd_resolved_t;
    type systemd_networkd_t;
    type irqbalance_t;
    type systemd_logind_t;
    type getty_t;
    type gssproxy_t;
    type httpd_config_t;
    type http_port_t;
    type sshd_t;
    type sysctl_net_t;
    type lib_t;
    type usr_t;
    type etc_t;
    type devpts_t;
    type node_t;
    type ephemeral_port_t;
    type tmp_t;
    type unconfined_service_t;
    type chkpwd_t;
    type system_dbusd_t;
    type lsmd_t;
    type chronyd_t;
    type auditd_t;
    type mail_port_t;
    type user_tmp_t;
    type unreserved_port_t;
    type random_device_t, device_t;
    attribute file_type;
    class file { getattr map open read execute execute_no_trans append setattr create unlink write };
    class dir { open read write search getattr add_name remove_name setattr list_dir_perms };
    class lnk_file { read getattr };
    class netlink_route_socket { create bind write read nlmsg_read nlmsg_write getattr };
    class process { fork setpgid signal_perms siginh noatsecure rlimitinh };
    class system module_request;
    class capability { net_admin chown fowner dac_override setgid setuid dac_read_search };
    class chr_file { read write };
    class fifo_file rw_fifo_file_perms;
    class unix_stream_socket create_stream_socket_perms;
    class tcp_socket { create_stream_socket_perms name_bind node_bind name_connect };
    class udp_socket { create setopt connect getattr write read create_socket_perms };
    class filesystem { getattr };
    class blk_file { getattr open read };
    class sock_file { getattr open read write };
}

type amazon_cloudwatch_agent_t;
type amazon_cloudwatch_agent_exec_t;
init_daemon_domain(amazon_cloudwatch_agent_t, amazon_cloudwatch_agent_exec_t)

allow amazon_cloudwatch_agent_t self:process { fork setpgid };
allow amazon_cloudwatch_agent_t self:fifo_file rw_fifo_file_perms;
allow amazon_cloudwatch_agent_t self:unix_stream_socket create_stream_socket_perms;
allow amazon_cloudwatch_agent_t self:tcp_socket create_stream_socket_perms;
allow amazon_cloudwatch_agent_t self:udp_socket create_socket_perms;
allow amazon_cloudwatch_agent_t self:udp_socket { connect send_msg };
allow amazon_cloudwatch_agent_t unreserved_port_t:udp_socket name_bind;

allow amazon_cloudwatch_agent_t node_t:tcp_socket node_bind;
allow amazon_cloudwatch_agent_t node_t:udp_socket node_bind;
allow amazon_cloudwatch_agent_t unreserved_port_t:tcp_socket { name_connect name_bind };
allow amazon_cloudwatch_agent_t ephemeral_port_t:tcp_socket name_connect;

#metric value benchmark
allow amazon_cloudwatch_agent_t auditd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t auditd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t auditd_t:lnk_file read;

#!!!! This avc can be allowed using the boolean 'domain_can_mmap_files'
allow amazon_cloudwatch_agent_t bin_t:file map;
allow amazon_cloudwatch_agent_t chronyd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t chronyd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t chronyd_t:lnk_file read;
allow amazon_cloudwatch_agent_t crond_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t crond_t:file { getattr open read };
allow amazon_cloudwatch_agent_t crond_t:lnk_file read;
allow amazon_cloudwatch_agent_t getty_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t getty_t:file { getattr open read };
allow amazon_cloudwatch_agent_t getty_t:lnk_file read;
allow amazon_cloudwatch_agent_t gssproxy_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t gssproxy_t:file { getattr open read };
allow amazon_cloudwatch_agent_t gssproxy_t:lnk_file read;
allow amazon_cloudwatch_agent_t init_t:dir read;
allow amazon_cloudwatch_agent_t init_t:lnk_file read;
allow amazon_cloudwatch_agent_t irqbalance_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t irqbalance_t:file { getattr open read };
allow amazon_cloudwatch_agent_t irqbalance_t:lnk_file read;
allow amazon_cloudwatch_agent_t kernel_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t kernel_t:file { getattr open read };
allow amazon_cloudwatch_agent_t kernel_t:lnk_file read;
allow amazon_cloudwatch_agent_t lsmd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t lsmd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t lsmd_t:lnk_file read;
allow amazon_cloudwatch_agent_t rngd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t rngd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t rngd_t:lnk_file read;
allow amazon_cloudwatch_agent_t self:capability { chown dac_override setgid setuid sys_ptrace dac_read_search };
allow amazon_cloudwatch_agent_t sshd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t sshd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t sshd_t:lnk_file read;
allow amazon_cloudwatch_agent_t syslogd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t syslogd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t syslogd_t:lnk_file read;
allow amazon_cloudwatch_agent_t system_dbusd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t system_dbusd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t system_dbusd_t:lnk_file read;
allow amazon_cloudwatch_agent_t systemd_logind_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t systemd_logind_t:file { getattr open read };
allow amazon_cloudwatch_agent_t systemd_logind_t:lnk_file read;
allow amazon_cloudwatch_agent_t systemd_networkd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t systemd_networkd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t systemd_networkd_t:lnk_file read;
allow amazon_cloudwatch_agent_t systemd_resolved_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t systemd_resolved_t:file { getattr open read };
allow amazon_cloudwatch_agent_t systemd_resolved_t:lnk_file read;
allow amazon_cloudwatch_agent_t systemd_userdbd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t systemd_userdbd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t systemd_userdbd_t:lnk_file read;
allow amazon_cloudwatch_agent_t udev_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t udev_t:file { getattr open read };
allow amazon_cloudwatch_agent_t udev_t:lnk_file read;
allow amazon_cloudwatch_agent_t unconfined_service_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t unconfined_service_t:file { getattr open read };
allow amazon_cloudwatch_agent_t unconfined_service_t:lnk_file read;
allow amazon_cloudwatch_agent_t unconfined_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t unconfined_t:file { getattr open read };
allow amazon_cloudwatch_agent_t unconfined_t:lnk_file read;
allow amazon_cloudwatch_agent_t statsd_port_t:udp_socket name_bind;

# Network access
#corenet_sendrecv_all_client_packets(amazon_cloudwatch_agent_t)


# Allow reading directories
# allow amazon_cloudwatch_agent_t file_type:dir { read getattr open search };


allow amazon_cloudwatch_agent_t { var_log_t proc_t sysfs_t }:dir { read getattr open search };
allow amazon_cloudwatch_agent_t { var_log_t proc_t sysfs_t }:file { read getattr open };


# Allow reading files
# allow amazon_cloudwatch_agent_t file_type:file { read getattr open };

# Allow reading symlinks
# allow amazon_cloudwatch_agent_t file_type:lnk_file { read getattr };

# cloudwatch logs / ca_bundle
allow amazon_cloudwatch_agent_t etc_t:file { getattr open read };
allow amazon_cloudwatch_agent_t user_tmp_t:file unlink;

allow sshd_t chkpwd_t:process { noatsecure rlimitinh siginh };
allow amazon_cloudwatch_agent_t sysctl_net_t:dir search;
allow amazon_cloudwatch_agent_t sysctl_net_t:file { read open getattr };
allow amazon_cloudwatch_agent_t self:netlink_route_socket { create bind write read nlmsg_read nlmsg_write getattr };

# Additional rules for other contexts
allow init_t unconfined_service_t:process siginh;
allow chkpwd_t user_devpts_t:chr_file { read write };
allow amazon_cloudwatch_agent_t amazon_cloudwatch_agent_exec_t:dir { open read write search getattr add_name remove_name setattr list_dir_perms };
allow amazon_cloudwatch_agent_t amazon_cloudwatch_agent_exec_t:file { create open read write getattr unlink execute_no_trans append setattr };

# New rules based on AVC messages
allow amazon_cloudwatch_agent_t mail_port_t:tcp_socket { name_bind name_connect };
allow amazon_cloudwatch_agent_t init_t:dir search;
allow amazon_cloudwatch_agent_t init_t:file { getattr read open };
corenet_tcp_sendrecv_http_port(amazon_cloudwatch_agent_t)
corenet_udp_sendrecv_http_port(amazon_cloudwatch_agent_t)


allow init_t amazon_cloudwatch_agent_exec_t:file ioctl;


# Allow DNS resolution
sysnet_dns_name_resolve(amazon_cloudwatch_agent_t)

# Logging
logging_send_syslog_msg(amazon_cloudwatch_agent_t)

# Allow CloudWatch Agent to read and get attributes of various filesystems
allow amazon_cloudwatch_agent_t { devpts_t tmp_t }:dir { read open getattr search };
allow amazon_cloudwatch_agent_t { devpts_t tmp_t }:file { read open getattr };
allow amazon_cloudwatch_agent_t { devpts_t tmp_t }:filesystem getattr;
allow amazon_cloudwatch_agent_t proc_t:dir { read getattr open search };
allow amazon_cloudwatch_agent_t proc_t:file { read getattr open };
# Allow reading sysfs
allow amazon_cloudwatch_agent_t sysfs_t:dir { read getattr open search };
allow amazon_cloudwatch_agent_t sysfs_t:file { read getattr open };
# Allow reading cgroup information
allow amazon_cloudwatch_agent_t cgroup_t:dir { read getattr open search };
allow amazon_cloudwatch_agent_t cgroup_t:file { read getattr open };
# Allow getattr on all filesystems

# Allow reading block devices (for disk statistics)
allow amazon_cloudwatch_agent_t fixed_disk_device_t:blk_file { getattr open read };

# Allow reading kernel information
allow amazon_cloudwatch_agent_t kernel_t:system syslog_read;

# Allow reading httpd configuration (if monitoring web servers)
allow amazon_cloudwatch_agent_t httpd_config_t:file { getattr open read };

# Allow connecting to http ports (for sending metrics)
allow amazon_cloudwatch_agent_t http_port_t:tcp_socket name_connect;

allow amazon_cloudwatch_agent_t var_log_t:dir { add_name write remove_name };
allow amazon_cloudwatch_agent_t var_log_t:file { append open setattr create write unlink };

# Allow reading system state
#kernel_read_system_state(amazon_cloudwatch_agent_t)

# Allow reading network state
#kernel_read_network_state(amazon_cloudwatch_agent_t)


# Allow getting attributes of all directories
files_getattr_all_dirs(amazon_cloudwatch_agent_t)

# Allow the agent to get disk information
storage_raw_read_fixed_disk(amazon_cloudwatch_agent_t)

# Allow the agent to read from /dev nodes
#dev_read_sysfs(amazon_cloudwatch_agent_t)


#dev_read_urand(amazon_cloudwatch_agent_t)

# Allow the agent to get attributes on all devices
#dev_getattr_all_blk_files(amazon_cloudwatch_agent_t)
#dev_getattr_all_chr_files(amazon_cloudwatch_agent_t)

allow amazon_cloudwatch_agent_t fixed_disk_device_t:blk_file { getattr open read };

# https://github.com/aws/amazon-cloudwatch-agent/actions/runs/13290208277/job/37109152155
allow amazon_cloudwatch_agent_t passwd_file_t:file { read open getattr };


#Cloudwatch logs - Error happens when deleting old state file /opt/aws/amazon-cloudwatch-agent/logs/state/_etc_shadow: remove /opt/aws/amazon-cloudwatch-agent/logs/state/_etc_shadow: permission denied
allow amazon_cloudwatch_agent_t shadow_t:file getattr;
allow amazon_cloudwatch_agent_t user_tmp_t:file open;


#metric- dimension: in this run
allow amazon_cloudwatch_agent_t proc_net_t:lnk_file read;
allow amazon_cloudwatch_agent_t proc_net_t:file { read open getattr };
allow amazon_cloudwatch_agent_t sysfs_t:lnk_file read;
allow amazon_cloudwatch_agent_t udev_var_run_t:file { getattr read open };
