apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ssm-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: ssm-agent
  template:
    metadata:
      labels:
        name: ssm-agent
    spec:
      hostNetwork: true
      containers:
        - name: ssm-agent
          image: public.ecr.aws/amazon-ssm-agent/amazon-ssm-agent:latest
          env:
            - name: AWS_EC2_METADATA_DISABLED
              value: "false"
            - name: AWS_DEFAULT_REGION
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command: ["/bin/sh", "-c"]
          args:
            - |
              export AWS_DEFAULT_REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/region)
              export AWS_ACCESS_KEY_ID=$(curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/$(curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/) | jq -r .AccessKeyId)
              export AWS_SECRET_ACCESS_KEY=$(curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/$(curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/) | jq -r .SecretAccessKey)
              export AWS_SESSION_TOKEN=$(curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/$(curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/) | jq -r .Token)
              echo "Region: $AWS_DEFAULT_REGION"
              echo "Starting SSM agent..."
              /usr/bin/amazon-ssm-agent
          securityContext:
            privileged: true
          volumeMounts:
            - name: host-root
              mountPath: /rootfs
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: host-etc
              mountPath: /etc/amazon/ssm
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: host-root
          hostPath:
            path: /
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: host-etc
          hostPath:
            path: /etc/amazon/ssm
      tolerations:
        - operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra