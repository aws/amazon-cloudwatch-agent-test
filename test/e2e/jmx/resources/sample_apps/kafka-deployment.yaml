apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
spec:
  selector:
    app: zookeeper
  ports:
    - port: 2181
      targetPort: 2181
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: wurstmeister/kafka:2.13-2.8.1
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  selector:
    app: kafka
  ports:
    - port: 9092
      targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
      annotations:
        instrumentation.opentelemetry.io/inject-java: "true"
        cloudwatch.aws.amazon.com/inject-jmx-kafka: "true"
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka:2.13-2.8.1
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://:9092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://:9092"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-producer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-producer
  template:
    metadata:
      labels:
        app: kafka-producer
      annotations:
        instrumentation.opentelemetry.io/inject-java: "true"
        cloudwatch.aws.amazon.com/inject-jmx-kafka-producer: "true"
    spec:
      containers:
        - name: kafka-producer
          image: wurstmeister/kafka:2.13-2.8.1
          command: ["/bin/sh"]
          args: ["-c", "while true; do echo 'Producing message'; kafka-console-producer.sh --broker-list kafka-service:9092 --topic test-topic | 'Test message'; sleep 5; done"]
          env:
            - name: KAFKA_BROKER_LIST
              value: "kafka-service:9092"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-consumer
  template:
    metadata:
      labels:
        app: kafka-consumer
      annotations:
        instrumentation.opentelemetry.io/inject-java: "true"
        cloudwatch.aws.amazon.com/inject-jmx-kafka-consumer: "true"
    spec:
      containers:
        - name: kafka-consumer
          image: wurstmeister/kafka:2.13-2.8.1
          command: ["/bin/sh"]
          args: ["-c", "kafka-console-consumer.sh --bootstrap-server kafka-service:9092 --topic test-topic --from-beginning"]
          env:
            - name: KAFKA_BROKER_LIST
              value: "kafka-service:9092"